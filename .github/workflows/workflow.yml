name: CI/CD
on: [push]
jobs:
  kaniko_build:
    name: kaniko build
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:debug
    steps:
      - uses: actions/checkout@v1
      - name: Create dockerconfig
        run: printf $FORMAT ${{ secrets.REGCRED }} > /kaniko/.docker/config.json
        env:
          FORMAT: '{"auths":{"https://index.docker.io/v1/":{"auth":"%s"}}}'
      - name: Build test image
        run: /kaniko/executor
          --cache
          --cache-repo paulshibanov/com
          --context $GITHUB_WORKSPACE
          --target test
          --destination paulshibanov/com:sha-$GITHUB_SHA
      - name: Build prod image
        run: /kaniko/executor
          --cache
          --cache-repo paulshibanov/com
          --context $GITHUB_WORKSPACE
          --destination paulshibanov/com:$GITHUB_SHA

  ng_lint:
    needs: [kaniko_build]
    name: ng lint
    runs-on: ubuntu-latest
    container:
      image: paulshibanov/com:sha-${{ github.sha }}
    steps:
      - name: Lint the code
        run: ng lint
        working-directory: /srv

  ng_test:
    needs: [kaniko_build]
    name: ng test
    runs-on: ubuntu-latest
    container:
      image: paulshibanov/com:sha-${{ github.sha }}
    steps:
      - name: Run unit tests
        run: ng test --watch=false --codeCoverage=true --browsers=ChromeHeadless
        working-directory: /srv
      - name: Upload code coverage report
        run: npx codecov -t ${{ secrets.CODECOV_TOKEN }}
        working-directory: /srv

  ng_e2e:
    needs: [kaniko_build]
    name: ng e2e
    runs-on: ubuntu-latest
    container:
      image: paulshibanov/com:sha-${{ github.sha }}
    steps:
      - name: Run e2e tests
        run: ng e2e --protractorConfig=e2e/headless.conf
        working-directory: /srv

  patch_deployment:
    needs: [ng_lint, ng_test, ng_e2e]
    if: github.ref == 'refs/heads/develop'
    name: patch
    runs-on: ubuntu-latest
    container:
      image: mikefarah/yq
    steps:
      - uses: actions/checkout@v1
      - name: update image
        run: yq w -i manifests/deployment.yaml spec.template.spec.containers[0].image paulshibanov/com:${{ github.sha }}
      - uses: actions/upload-artifact@master
        with:
          name: deployment
          path: manifests/deployment.yaml

  deployment:
    needs: [ng_lint, ng_test, ng_e2e, patch_deployment]
    if: github.ref == 'refs/heads/develop'
    name: kubectl deploy
    runs-on: ubuntu-latest
    container:
      image: lachlanevenson/k8s-kubectl
    steps:
      - name: Configure access
        env:
          KUBE: ${{ secrets.KUBE }}
        run: mkdir $HOME/.kube && printenv KUBE > $HOME/.kube/config
      - uses: actions/download-artifact@master
        with:
          name: deployment
          path: manifests/deployment.yaml
      - name: Deploy
        run: kubectl apply -f manifests/deployment.yaml
